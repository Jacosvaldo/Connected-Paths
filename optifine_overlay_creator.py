# -*- coding: utf-8 -*-
"""OptiFine Overlay Creator

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IRqW3J2Ul7tWdgVkrZn6LEoqrEHy5Imd

#How to use
<font size=4>To use it, just run the code blocks one by one, reading and following the notes.
This first block of code will probably return "Requirement already satisfied", it was here just for precaution</font>
"""

pip install pillow

"""#Upload your archive

<font size=4>Run the code block below and a button to upload your archive will appear bellow it

Upload your base textue as an 48x48 image like this example:</font>
![example](https://i.imgur.com/ySAuADq.gif)

<font size=4>Each red and blue squares are 16x16 texture and the orange won't be used so it could be empty</font>
"""

from google.colab import files

# Prompts the user to upload the file
uploaded = files.upload()

# Check if the file was sent correctly
for filename in uploaded.keys():
    print(f'Archive "{filename}" was send successfully. Reading it...')

    # Rename the archive to input.png
    import os
    os.rename(filename, 'input.png')

    # Display confirmation message
    print(f'Arquivo renomeado para "input.png".')

"""# Download

Just run the code block bellow and the textures will be downloaded inside a zip file
"""

from PIL import Image
import os
import zipfile

# Function to compose images
def compose_images(base_image, overlay_coords, output_path):
    new_image = Image.new("RGBA", (16, 16))
    for x, y in overlay_coords:
        box = (x * 16, y * 16, (x + 1) * 16, (y + 1) * 16)
        part = base_image.crop(box)
        new_image = Image.alpha_composite(new_image, part)
    new_image.save(output_path)

# Load the base image
base_image = Image.open("input.png")

# Define the overlays
overlays = {
    0: [(0, 0)],
    1: [(1, 0)],
    2: [(2, 0)],
    3: [(1, 0), (0, 1)],
    4: [(1, 0), (2, 1)],
    5: [(1, 0), (0, 1), (2, 1)],
    6: [(1, 0), (2, 1), (1, 2)],
    7: [(0, 1)],
    8: [(1, 0), (0, 1), (2, 1), (1, 2)],
    9: [(2, 1)],
    10: [(0, 1), (1, 2)],
    11: [(2, 1), (1, 2)],
    12: [(0, 1), (1, 0), (1, 2)],
    13: [(0, 1), (2, 1), (1, 2)],
    14: [(0, 2)],
    15: [(1, 2)],
    16: [(2, 2)]
}

# Create a directory for the generated images
output_dir = "output_images"
os.makedirs(output_dir, exist_ok=True)

# Generate the images
for key, coords in overlays.items():
    output_path = os.path.join(output_dir, f"{key}.png")
    compose_images(base_image, coords, output_path)

# Compress images into a zip file
zip_filename = "generated_images.zip"
with zipfile.ZipFile(zip_filename, 'w') as zipf:
    for root, _, files in os.walk(output_dir):
        for file in files:
            zipf.write(os.path.join(root, file), os.path.relpath(os.path.join(root, file), output_dir))

# Provide a download link
from google.colab import files
files.download(zip_filename)